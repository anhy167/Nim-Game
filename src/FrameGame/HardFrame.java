/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrameGame;

import Nim.Pile;
import Nim.SmartComputer;
import java.awt.Image;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Acer
 */
public class HardFrame extends javax.swing.JFrame {


    private Pile pile;
    private SmartComputer smartAI;
    private int amount;
    private boolean isYourTurn = true;
    private int totalCoin;
    private int remaining;
    
    public HardFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(51, 40, 128));
        pile = new Pile();
        smartAI = new SmartComputer();
        myInitState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        totalCoinLbl = new javax.swing.JLabel();
        remainLbl = new javax.swing.JLabel();
        playerLbl = new javax.swing.JLabel();
        computerLbl = new javax.swing.JLabel();
        getCoinPlayer = new javax.swing.JTextField();
        takeCoinBtn = new javax.swing.JButton();
        showTotalCoinBtn = new javax.swing.JButton();
        remainCoinBtn = new javax.swing.JButton();
        showCoinComTakeBtn = new javax.swing.JButton();
        renewBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hard Mode");
        setPreferredSize(new java.awt.Dimension(749, 440));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 40, 128));
        jPanel1.setPreferredSize(new java.awt.Dimension(290, 425));

        totalCoinLbl.setBackground(new java.awt.Color(51, 40, 128));
        totalCoinLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        totalCoinLbl.setForeground(new java.awt.Color(255, 195, 62));
        totalCoinLbl.setText("Total");
        totalCoinLbl.setOpaque(true);

        remainLbl.setBackground(new java.awt.Color(51, 40, 128));
        remainLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        remainLbl.setForeground(new java.awt.Color(255, 195, 62));
        remainLbl.setText("Remaining");
        remainLbl.setOpaque(true);

        playerLbl.setBackground(new java.awt.Color(51, 40, 128));
        playerLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        playerLbl.setForeground(new java.awt.Color(255, 195, 62));
        playerLbl.setText("Player:");
        playerLbl.setOpaque(true);

        computerLbl.setBackground(new java.awt.Color(51, 40, 128));
        computerLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        computerLbl.setForeground(new java.awt.Color(255, 195, 62));
        computerLbl.setText("Computer taken:");
        computerLbl.setOpaque(true);

        takeCoinBtn.setBackground(new java.awt.Color(235, 235, 235));
        takeCoinBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        takeCoinBtn.setForeground(new java.awt.Color(255, 168, 12));
        takeCoinBtn.setText("Take");
        takeCoinBtn.setOpaque(true);
        takeCoinBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takeCoinBtnMouseClicked(evt);
            }
        });

        renewBtn.setBackground(new java.awt.Color(235, 235, 235));
        renewBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        renewBtn.setForeground(new java.awt.Color(255, 168, 12));
        renewBtn.setText("New game");
        renewBtn.setOpaque(true);
        renewBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                renewBtnMouseClicked(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(235, 235, 235));
        backBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 168, 12));
        backBtn.setText("Back");
        backBtn.setOpaque(true);
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(computerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showCoinComTakeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playerLbl)
                                    .addComponent(remainLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(getCoinPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addComponent(takeCoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(remainCoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(totalCoinLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showTotalCoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(renewBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator1)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalCoinLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showTotalCoinBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(remainLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(playerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(computerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(remainCoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getCoinPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(takeCoinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(showCoinComTakeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addComponent(renewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(206, 206, 206)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(206, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(6, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel2.setLayout(new java.awt.GridLayout(10, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void takeCoinBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takeCoinBtnMouseClicked
        if (isYourTurn == true) {
            amount = Integer.parseInt(getCoinPlayer.getText());
            getCoinPlayer.setText("");
            while (true) {
                if (amount <= remaining / 2 && amount > 0) {
                    break;
                } else {
                    JOptionPane.showMessageDialog(this, "The number of coins taken must be less greater than " + remaining / 2 + " and greater than 0!");
                    return;
                }
            }
         
            remaining = remaining - amount;

            addCoin(jPanel2, remaining);
            String remainCoinStr = String.valueOf(remaining);
            remainCoinBtn.setText(remainCoinStr);

            if (remaining == 1) {
                if (JOptionPane.showConfirmDialog(this, "You win!!! Do you want to play again?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
                    new Main().setVisible(true);
                    this.setVisible(false);
                    return;
                }
                this.dispose();
                new HardFrame().setVisible(true);

            }
            isYourTurn = false;

        }

        if (isYourTurn == false) {
            amount = smartAI.move(remaining);
            
            remaining = remaining - amount;

            addCoin(jPanel2, remaining);
            String showCoinComTake = String.valueOf(amount);
            remainCoinBtn.setText(String.valueOf(remaining));
            showCoinComTakeBtn.setText(showCoinComTake);

            if (remaining == 1) {
                if (JOptionPane.showConfirmDialog(this, "Computer win!!! Do you want to play again?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
                    new Main().setVisible(true);
                    this.setVisible(false);
                    return;
                }
                this.dispose();
                new HardFrame().setVisible(true);
            }

            isYourTurn = true;

        }
    }//GEN-LAST:event_takeCoinBtnMouseClicked

    private void renewBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_renewBtnMouseClicked
        this.setVisible(false);
        new HardFrame().setVisible(true);
    }//GEN-LAST:event_renewBtnMouseClicked

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        updateData();
        this.setVisible(false);
        new Main().setVisible(true);
    }//GEN-LAST:event_backBtnMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        updateData();
    }//GEN-LAST:event_formWindowClosing
    public void addCoin(JPanel jp, int pileSize) {

        jp.removeAll();
        jp.updateUI();

        for (int i = 0; i < pileSize; i++) {
            JLabel j1 = new JLabel();
            j1.setSize(40, 40);
            j1.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/img/coin-removebg.png")).getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
            jp.add(j1);
            jp.setBackground(new java.awt.Color(51, 40, 128));
        }

    }
    public void updateData() {
        String url = "C:\\Users\\Acer\\Documents\\NetBeansProjects\\The-Game-of-Nim-Programming-II-master\\src\\data\\data_hard.txt";
        BufferedWriter bw = null;
        try {
            FileWriter fw = new FileWriter(url);
            bw = new BufferedWriter(fw);
            String totalCoinUpdate = String.valueOf(totalCoin);
            String remainingUpdate = String.valueOf(remaining);
            String stateUpdate = String.valueOf(isYourTurn);

            bw.write(totalCoinUpdate + "\n");
            bw.write(remainingUpdate + "\n");
            bw.write(stateUpdate);

        } catch (Exception ex) {
            System.out.println(ex);
        } finally {
            try {
                bw.close();
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }

    }


    void myInitState() {
        
        totalCoin = pile.getPileSize();
        addCoin(jPanel2, totalCoin);
        showTotalCoinBtn.setText(String.valueOf(totalCoin));
        remaining = totalCoin;

        if (JOptionPane.showConfirmDialog(this, "Do you want to play first?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
            amount = smartAI.move(remaining);
            
            remaining = remaining - amount;
            addCoin(jPanel2, remaining);
            String showCoinComTake = String.valueOf(amount);
            remainCoinBtn.setText(String.valueOf(remaining));
            showCoinComTakeBtn.setText(showCoinComTake);
            isYourTurn = true;
        }
        isYourTurn = true;
        getCoinPlayer.setText("");

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel computerLbl;
    private javax.swing.JTextField getCoinPlayer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel playerLbl;
    private javax.swing.JButton remainCoinBtn;
    private javax.swing.JLabel remainLbl;
    private javax.swing.JButton renewBtn;
    private javax.swing.JButton showCoinComTakeBtn;
    private javax.swing.JButton showTotalCoinBtn;
    private javax.swing.JButton takeCoinBtn;
    private javax.swing.JLabel totalCoinLbl;
    // End of variables declaration//GEN-END:variables
}
